"use strict";(self.webpackChunk_autometa_documentation=self.webpackChunk_autometa_documentation||[]).push([[5274],{4993:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(2983);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=c(n),h=i,g=l["".concat(u,".").concat(h)]||l[h]||d[h]||o;return n?r.createElement(g,a(a({ref:t},p),{},{components:n})):r.createElement(g,a({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=h;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[l]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(3050),i=(n(2983),n(4993));const o={sidebar_position:8},a="Writing Gherkin",s={unversionedId:"cucumber/test_runner/api-testing/writing-gherkin-get-product",id:"cucumber/test_runner/api-testing/writing-gherkin-get-product",title:"Writing Gherkin",description:"We have everything in place to support our gherkin, so let's start writing it.",source:"@site/docs/cucumber/test_runner/api-testing/writing-gherkin-get-product.mdx",sourceDirName:"cucumber/test_runner/api-testing",slug:"/cucumber/test_runner/api-testing/writing-gherkin-get-product",permalink:"/autometa/docs/cucumber/test_runner/api-testing/writing-gherkin-get-product",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cucumber/test_runner/api-testing/writing-gherkin-get-product.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"cucumberRunnerBar",previous:{title:"Static Data - Mapping Names to IDs",permalink:"/autometa/docs/cucumber/test_runner/api-testing/static-data"},next:{title:"Writing Step Definitions - Putting it Together",permalink:"/autometa/docs/cucumber/test_runner/api-testing/writing-step-definitions"}},u={},c=[],p={toc:c},l="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(l,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"writing-gherkin"},"Writing Gherkin"),(0,i.kt)("p",null,"We have everything in place to support our gherkin, so let's start writing it.\nWe'll write some test plans for a few endpoints on the ",(0,i.kt)("inlineCode",{parentName:"p"},"products")," controller."),(0,i.kt)("p",null,"To start let's do the ",(0,i.kt)("inlineCode",{parentName:"p"},"products/{id}")," endpoint, which retrieves a single product\nby its id."),(0,i.kt)("p",null,"We'll write our test from the perspective of a 'Customer', who wishes to browse products."),(0,i.kt)("p",null,"To start, we need to get the product id. Since we know we have an ",(0,i.kt)("inlineCode",{parentName:"p"},"iPhone 9")," as static data, we\ncan reference that in our set up step. Then we'll execute the request to view the product, and\nfinally we'll verify that the product has the expected values for each property."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: As a Customer, I want to view available products\n\n    Scenario: View a single product\n      Given I want to view the product 'iPhone 9'\n      When I view the product\n      Then the product description is \"An apple mobile which is nothing like apple\"\n      And the product price is 549\n      * the product 'discount percentage' is 12.96\n      * the product brand is Apple\n")),(0,i.kt)("p",null,"The last 4 steps all refer to the same step definition, but it can be used to test almost our entire\nresponse body, however we would need to come up with a new strategy to test arrays."),(0,i.kt)("p",null,"Alternatively, instead of using a builder pattern for the Then steps, you could use a table. The main difference\nis the table will likely need to contain all fields in all tests, while the builder pattern allows you\nto focus on different fields in different tests. For these we'll use a vertical table, where the titles\nare represented by the leftmost column, and apply to a row."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: As a Customer, I want to view available products\n\n    Scenario: I view an iPhone 9\n      Given I want to view the product 'iPhone 9'\n      When I view the product\n      Then the product has the expected details\n        | description | An apple mobile which is nothing like apple |\n        | price       | 549                                        |\n        | discount    | 12.96                                      |\n        | brand       | Apple                                      |\n")),(0,i.kt)("p",null,"That's enough to start with, so lets put together our code so far to create\nstep definitions to test both of these scenario styles."))}d.isMDXComponent=!0}}]);