"use strict";(self.webpackChunk_autometa_documentation=self.webpackChunk_autometa_documentation||[]).push([[8080],{7522:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(9901);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),s=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(r),m=n,d=c["".concat(u,".").concat(m)]||c[m]||f[m]||i;return r?a.createElement(d,o(o({ref:t},p),{},{components:r})):a.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8090:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=r(4321),n=(r(9901),r(7522));const i={},o="Referencing Feature files",l={unversionedId:"cucumber/test_runner/import-strategies",id:"cucumber/test_runner/import-strategies",title:"Referencing Feature files",description:"The Feature function takes a filepath to the gherkin feature file it tests. There are mulitiple strategies to identify a feature file.",source:"@site/docs/cucumber/test_runner/import-strategies.mdx",sourceDirName:"cucumber/test_runner",slug:"/cucumber/test_runner/import-strategies",permalink:"/autometa/docs/cucumber/test_runner/import-strategies",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cucumber/test_runner/import-strategies.mdx",tags:[],version:"current",frontMatter:{},sidebar:"cucumberRunnerBar",previous:{title:"Using Allure",permalink:"/autometa/docs/cucumber/test_runner/Allure/enabling_allure"}},u={},s=[{value:"Project Relative",id:"project-relative",level:2},{value:"Absolute",id:"absolute",level:2},{value:"Relative",id:"relative",level:2},{value:"Features root",id:"features-root",level:2},{value:"Home directory",id:"home-directory",level:2},{value:"Directories &amp; Globs",id:"directories--globs",level:2}],p={toc:s},c="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"referencing-feature-files"},"Referencing Feature files"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Feature")," function takes a filepath to the gherkin ",(0,n.kt)("inlineCode",{parentName:"p"},"feature")," file it tests. There are mulitiple strategies to identify a feature file."),(0,n.kt)("h2",{id:"project-relative"},"Project Relative"),(0,n.kt)("p",null,"If no prefix is attached to a file path, it will be found\nrelative to the project root:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * This option will resolve to `/path/to/project-root/features/my-feature.feature\n */\nFeature("features/my-feature.feature");\n')),(0,n.kt)("h2",{id:"absolute"},"Absolute"),(0,n.kt)("p",null,"If your feature files have an absolute path it will be used as is."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'Feature("/user/ci/features/my-feature.feature");\n')),(0,n.kt)("h2",{id:"relative"},"Relative"),(0,n.kt)("p",null,"If your path starts with ",(0,n.kt)("inlineCode",{parentName:"p"},"./")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"../")," it will be treated as a relative path. It wil be relative to the ",(0,n.kt)("em",{parentName:"p"},"file"),"\nexecuting it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * assuming this is in `<root>/e2e/\n *\n * The first option will resolve to `/path/to/project-root/e2e/my-feature.featre\n * And the second option will resolve to `/path/to/project-root/features/my-feature.featre\n */\nFeature("./my-feature.feature");\nFeature("../features/my-feature.feature");\n')),(0,n.kt)("h2",{id:"features-root"},"Features root"),(0,n.kt)("p",null,"You can define a ",(0,n.kt)("inlineCode",{parentName:"p"},"featuresRoot")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"defineConfig"),". That value must be a directory path string. If it is set,\nfeatues in that file can be accessed from anywhere in the project by using a filepath relative to that root.\nTo actually indicate the path starts at the feature root, prepend it with ",(0,n.kt)("inlineCode",{parentName:"p"},"^/"),". When\nthis pattern is detetected, the path will be resolved as if it were relative, but it is relative to ",(0,n.kt)("inlineCode",{parentName:"p"},"<root>/<featuresRoot>"),"."),(0,n.kt)("p",null,"Assuming the feature root is ",(0,n.kt)("inlineCode",{parentName:"p"},"features"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * This option will resolve to `/path/to/project-root/features/my-feature.featre\n */\nFeature("^/my-feature.feature");\n')),(0,n.kt)("h2",{id:"home-directory"},"Home directory"),(0,n.kt)("p",null,"A path starting with a tilde and slash (",(0,n.kt)("inlineCode",{parentName:"p"},"~/"),") will be treated as an\nrelative path starting at the users home directory."),(0,n.kt)("h2",{id:"directories--globs"},"Directories & Globs"),(0,n.kt)("p",null,"It's possible for a ",(0,n.kt)("inlineCode",{parentName:"p"},"Feature")," function to exeute more than one ",(0,n.kt)("inlineCode",{parentName:"p"},".feature")," file. This can\nbe done by passing a directory, which will be walked for all feature files and will then be executed."),(0,n.kt)("p",null,"Alternatively this can be done by passing a file glob. This will behave the same as a directory but\nwill only execute ",(0,n.kt)("inlineCode",{parentName:"p"},".feature")," files which match a pattern"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'// by dir\nFeature("../features");\n//by glob\nFeature("../features/user-*.feature");\n// or broader glob\nFeature("**/*.feature");\n')),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"If executing multiple feature files or entire directories, please note\nyou may lose the benefits of frameworks like jest or vitest where they can parallelize\ndifferent files.")))}f.isMDXComponent=!0}}]);