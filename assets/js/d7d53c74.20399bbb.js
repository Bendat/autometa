"use strict";(self.webpackChunkautometa=self.webpackChunkautometa||[]).push([[868],{9613:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return t?a.createElement(h,o(o({ref:n},u),{},{components:t})):a.createElement(h,o({ref:n},u))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1747:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=t(5882),r=t(950),i=(t(9496),t(9613)),o=["components"],s={},c="Introduction",l={unversionedId:"bdd/cucumber/intro",id:"bdd/cucumber/intro",title:"Introduction",description:"Autometa is a runner for Cucumber which runs on Jest.",source:"@site/docs/1_bdd/cucumber/1_intro.md",sourceDirName:"1_bdd/cucumber",slug:"/bdd/cucumber/intro",permalink:"/autometa/docs/bdd/cucumber/intro",editUrl:"https://github.com/Bendat/autometa/docs/1_bdd/cucumber/1_intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Autometa",permalink:"/autometa/docs/intro"},next:{title:"Automatic Scenarios",permalink:"/autometa/docs/bdd/cucumber/all-steps"}},u=[{value:"Backgrounds",id:"backgrounds",children:[{value:"Background In Feature File",id:"background-in-feature-file",children:[],level:3},{value:"Background in Steps Only",id:"background-in-steps-only",children:[],level:3}],level:2},{value:"Rules",id:"rules",children:[],level:2},{value:"Storing Data Between Steps and Shared steps in a Test",id:"storing-data-between-steps-and-shared-steps-in-a-test",children:[],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/autometa/cucumber"},"Autometa")," is a runner for ",(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/"},"Cucumber")," which runs on ",(0,i.kt)("a",{parentName:"p",href:"https://jestjs.io/"},"Jest"),"."),(0,i.kt)("p",null,"It replaces Cucumber with a callback style of test using ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenarios"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario Outlines")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Given")," ",(0,i.kt)("inlineCode",{parentName:"p"},"When")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Then")," etc steps."),(0,i.kt)("p",null,"This library was inspired by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bencompton/jest-cucumber"},"jest-cucumber")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This project uses ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/tsyringe"},"tsyringe")," internally and depends on ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/reflect-metadata"},"reflect-metadata"),";"),(0,i.kt)("p",{parentName:"div"},"You must ensure that ",(0,i.kt)("inlineCode",{parentName:"p"},"import 'reflect-metadata'")," is one\nof the first imports made in your tests. One place to\nput this could be the first line of your ",(0,i.kt)("a",{parentName:"p",href:"/autometa/docs/bdd/cucumber/Configuration/setup"},"configuration file")))),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Install autometa"',title:'"Install','autometa"':!0},"npm i -D @autometa/cucumber\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Add test pattern to jest config"',title:'"Add',test:!0,pattern:!0,to:!0,jest:!0,'config"':!0},'"testMatch": [\n    "**/*.steps.ts"\n],\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:'title="Add a Feature File"',title:'"Add',a:!0,Feature:!0,'File"':!0},"Feature: Search For Houses\n    Scenario: I Can Search For A House In London\n        Given I am looking for a house in 'London'\n        When I search for houses\n        Then I receive a list of results\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Create a Steps file"',title:'"Create',a:!0,Steps:!0,'file"':!0},"import { Feature } from '@autometa/cucumber';\n\nFeature(() => {}, './features/SearchHouses.feature');\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The path to the feature file can be specified relative to the current\nfile position by starting with ",(0,i.kt)("inlineCode",{parentName:"p"},"./"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"../")," or no prefix.\nThe prefix ",(0,i.kt)("inlineCode",{parentName:"p"},"~/")," will attempt to load the file relative to the root\nof the running project, while an absolute path will be used as is."))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Feature")," function takes a callback which provides as an argument an object containing the following test functions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Scenario")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ScenarioOutline")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/autometa/docs/bdd/cucumber/all-steps"},(0,i.kt)("inlineCode",{parentName:"a"},"All")))),(0,i.kt)("p",null,"Also provided is a shared step ",(0,i.kt)("inlineCode",{parentName:"p"},"Background")," function which will be applied to all relevant scenarios, and a ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule"),", which behaves like\na ",(0,i.kt)("inlineCode",{parentName:"p"},"Feature")," and provides ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ScenarioOutline"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Add a Scenario"',title:'"Add',a:!0,'Scenario"':!0},"import { Feature } from '@autometa/cucumber';\n\nFeature(({ Scenario }) => {\n  Scenario('I Can Search For A House In London', () => {});\n}, './features/SearchHouses.feature');\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"N.b ensure that scenarios have complete, unique names.")),(0,i.kt)("p",null,"The callback objects like ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario")," also take a callback, which\nprovides the step functions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Add Steps"',title:'"Add','Steps"':!0},"import { Feature } from '@autometa/cucumber';\nimport { Searcher } from '../src/test-actions';\n\nFeature(({ Scenario }) => {\n  Scenario('I Can Search For A House In London', ({ Given, When, Then }) => {\n    Given('I am looking for a house in London', () => {\n      Searcher.setLocation('London');\n    });\n\n    When('I search for houses', () => {\n      Searcher.executeSearch();\n    });\n\n    Then('I receive a list of results', () => {\n      const expected = { address: '1 Pilsbury Lane', bedrooms: 2 };\n      expect(Searcher.result).toContain(expected);\n    });\n  });\n}, './features/SearchHouses.feature');\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='Scenario Outline'",title:"'Scenario","Outline'":!0},"Feature(({ ScenarioOutline }) => {\n  ScenarioOutline('I Can Search For A House', ({ Given, When, Then }) => {\n    Given('I am looking for a house in {string}', (city) => {\n      Searcher.setLocation(city);\n    });\n\n    When('I search for houses', () => {\n      Searcher.executeSearch();\n    });\n\n    Then(\n      'I receive a list of results containing {string} with {number} bedrooms',\n      (address: string, bedrooms: number) => {\n        const expected = { address, bedrooms };\n        expect(Searcher.result).toContain(expected);\n      }\n    );\n  });\n}, './features/SearchHouses.feature');\n")),(0,i.kt)("h2",{id:"backgrounds"},"Backgrounds"),(0,i.kt)("p",null,"Backgrounds are another test callback. Steps in a Background\nwill be reused across any scenarios within scope of that Background - i.e a Background inside a rule is not relevant to a Scenario outside a rule."),(0,i.kt)("p",null,"Backgrounds in autometa do not have to match the Background blocks in a Feature file - They can be ignored entirely or used to reduce initialization steps that don't have a Background in Feature."),(0,i.kt)("h3",{id:"background-in-feature-file"},"Background In Feature File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: A Feature\n    Background:\n        Given a setup step\n\n    Scenario: A Scenario\n        When a when step\n")),(0,i.kt)("p",null,"The steps for this can be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"Feature(({ Background, Scenario }) => {\n  Background(({ Given }) => {\n    Given('a setup step', () => {});\n  });\n\n  Scenario('A Scenario', () => {\n    When('a when step', () => {});\n  });\n});\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"Feature(({ Scenario }) => {\n  Scenario('A Scenario', () => {\n    Given('a setup step', () => {});\n    When('a when step', () => {});\n  });\n});\n")),(0,i.kt)("p",null,"As the Background is optional."),(0,i.kt)("h3",{id:"background-in-steps-only"},"Background in Steps Only"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: A Feature\n    Scenario: A Scenario\n        Given a setup step\n        When a when step\n\n    Scenario: Another Scenario\n        Given a setup step\n        When another when step\n")),(0,i.kt)("p",null,"The steps for this can be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"Feature(({ Background, Scenario }) => {\n  Background(({ Given }) => {\n    Given('a setup step', () => {});\n  });\n\n  Scenario('A Scenario', ({ When }) => {\n    When('a when step', () => {});\n  });\n\n  Scenario('Another Scenario', ({ Then }) => {\n    When('a when step', () => {});\n  });\n});\n")),(0,i.kt)("h2",{id:"rules"},"Rules"),(0,i.kt)("p",null,"Rules behave similarly to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Feature")," function. It is a function\nprovided by the ",(0,i.kt)("inlineCode",{parentName:"p"},"Feature")," and which provides it's own copy of ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ScenarioOutline")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Background")," which map to a\nRule in the Feature File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: A User Can Log In\n    Background:\n        Given a user\n\n    Scenario: A User Successfully Logs In\n        Given they enter their credentials\n        When they log in\n        The they are presented with their profile\n\n    Rule: If a username is invalid, then the log in will fail\n        Scenario: A User Cannot Log In Without A Username\n            Given they do not provide a username\n            When they log in\n            Then log in fails\n\n        Scenario: A User Cannot Log In With The Wrong Username\n            Given they provide the wrong username\n            When they log in\n            Then log in fails\n\n")),(0,i.kt)("p",null,"Which can be expressed as"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"Feature(({ Background, Scenario, Rule })=>{\n    Background(({ Given })=>{\n        Given('a user', ()=>{})\n    });\n\n    Scenario(' A User Successfully Logs In', ({ Given, When, Then })=>{\n        Given('they enter their credentials', ()=>{})\n        When('they log in', ()=>{})\n        Then('they are presented with their profile', ()=>{})\n    });\n\n    Rule('If a username is invalid, then the log in will fail', ({ Scenario })=>{\n        Scenario('A User Cannot Log In Without A Username', ()=>{...})\n        Scenario('A User Cannot Log In With The Wrong Username', ()=>{...})\n    })\n}, './file.feature')\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Rules can also have a Background"))),(0,i.kt)("h2",{id:"storing-data-between-steps-and-shared-steps-in-a-test"},"Storing Data Between Steps and Shared steps in a Test"),(0,i.kt)("p",null,"The are ",(0,i.kt)("a",{parentName:"p",href:"/autometa/docs/bdd/cucumber/data"},"storage container")," objects available to each\ntest instance. These are automatically injected into every scenario\nand are unique to each scenario."))}d.isMDXComponent=!0}}]);