"use strict";(self.webpackChunk_autometa_documentation=self.webpackChunk_autometa_documentation||[]).push([[6194],{4993:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(2983);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),f=i,d=p["".concat(c,".").concat(f)]||p[f]||m[f]||o;return n?r.createElement(d,a(a({ref:t},l),{},{components:n})):r.createElement(d,a({ref:t},l))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8418:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(3050),i=(n(2983),n(4993));const o={sidebar_position:10},a="File Object Proxies",s={unversionedId:"cucumber/test_runner/file-proxies",id:"cucumber/test_runner/file-proxies",title:"File Object Proxies",description:"A File Object is a proxy instance tied to some Interface. It is created",source:"@site/docs/cucumber/test_runner/file-proxies.mdx",sourceDirName:"cucumber/test_runner",slug:"/cucumber/test_runner/file-proxies",permalink:"/autometa/docs/cucumber/test_runner/file-proxies",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cucumber/test_runner/file-proxies.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"cucumberRunnerBar",previous:{title:"HTTP Client",permalink:"/autometa/docs/cucumber/test_runner/http-client"},next:{title:"Setting Up",permalink:"/autometa/docs/cucumber/test_runner/api-testing/setting-up"}},c={},u=[],l={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"file-object-proxies"},"File Object Proxies"),(0,i.kt)("p",null,"A File Object is a proxy instance tied to some Interface. It is created\nby passing filepath to the ",(0,i.kt)("inlineCode",{parentName:"p"},"FileObject")," function. The returned object\nwill be the type of the generic interface parameter provided to the function."),(0,i.kt)("p",null,"This object will behave similarly to a plain javascript object, but instead\nof being in memory, it instead reads from and writes directly to a file."),(0,i.kt)("p",null,"This file will be a json file containing the stringified version of the\nobject you are manipulating."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { john } from "./credentials";\ninterface AuthFile {\n  token: string;\n  refreshToken: string;\n}\n\nconst authFile = FileObject<AuthFile>("./auth.json");\nconst { token, refreshToken } = await authClient.login(john);\nauthFile.token = token;\nauthFile.refreshToken = refreshToken;\n\n// somewhere else\nconst token = authFile.token;\nawait myClient.get("foo/stuff", token);\n')),(0,i.kt)("h1",{id:"arrays-and-nested-objects"},"Arrays and Nested Objects"),(0,i.kt)("p",null,"By default there is no way to determine if a getter is supposed to return\nan array or Object. To enable this, you can pass in a template Object,\nwhich represents the nested structure of your File."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'interface AuthFile {\n  token: string;\n  refreshToken: string;\n  user: {\n    name: string;\n    email: string;\n    tags: string[];\n  };\n}\n\nconst authFile = FileObject<AuthFile>("./auth.json", {\n  user: {\n    tags: []\n  }\n});\n')),(0,i.kt)("p",null,"Now the file proxy can be used as expected:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'authFile.user.name = "John Doe";\nauthFile.user.email = "john.doe@email.com"\nauthFile.user.tags.push("admin");\n')))}m.isMDXComponent=!0}}]);