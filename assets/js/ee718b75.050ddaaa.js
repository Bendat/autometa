"use strict";(self.webpackChunkautometa=self.webpackChunkautometa||[]).push([[83],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,b=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(b,i(i({ref:t},p),{},{components:n})):r.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7910:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var r=n(5882),a=n(950),o=(n(9496),n(9613)),i=["components"],s={},l="Variables, Regex and Expressions",c={unversionedId:"bdd/cucumber/variables",id:"bdd/cucumber/variables",title:"Variables, Regex and Expressions",description:"Variables can be extracted from a Gherkin step using either",source:"@site/docs/1_bdd/cucumber/4_variables.md",sourceDirName:"1_bdd/cucumber",slug:"/bdd/cucumber/variables",permalink:"/autometa/docs/bdd/cucumber/variables",editUrl:"https://github.com/Bendat/autometa/docs/1_bdd/cucumber/4_variables.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Reusing Steps",permalink:"/autometa/docs/bdd/cucumber/shared-steps"},next:{title:"Asynchronous Step Definitions",permalink:"/autometa/docs/bdd/cucumber/async"}},p=[{value:"Cucumber Expressions Example",id:"cucumber-expressions-example",children:[],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"variables-regex-and-expressions"},"Variables, Regex and Expressions"),(0,o.kt)("p",null,"Variables can be extracted from a Gherkin step using either\nRegex or ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cucumber/cucumber-expressions#readme"},"Cucumber Expressions"),"."),(0,o.kt)("p",null,"Once extracted, the variable will be passed to the argument list\nof the Step function being executed."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Cucumber expressions will attempt to coerce the\ntype of the provided variable to the correct javascript\ntype. Custom parameter types are not currently supported\nfor Cucumber expressions."),(0,o.kt)("p",{parentName:"div"},"Regex steps do not currently have type coercion, and\nall variables will be considered a string."))),(0,o.kt)("h2",{id:"cucumber-expressions-example"},"Cucumber Expressions Example"),(0,o.kt)("p",null,"Cucumber Expressions match a ",(0,o.kt)("inlineCode",{parentName:"p"},"{keyword}")," from the step definition string, to a piece of text in the feature file step string."),(0,o.kt)("p",null,"E.g to match an alphanumeric word as a string, ",(0,o.kt)("inlineCode",{parentName:"p"},"{string}")," is used, other options include ",(0,o.kt)("inlineCode",{parentName:"p"},"{int}"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"{float}"),", and others."),(0,o.kt)("p",null,"Take the following step:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"Scenario Outline: A Scenario Outline\n    Given a <object> with <count> crabs inside\n\n    Examples:\n      | object | count |\n      | bucket | 50    |\n      | bowl   | 3     |\n...\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"N.b expressions work with normal scenarios, or outlines with variables inject, even on steps with no variables.")),(0,o.kt)("p",null,"The step definition would then be"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"...\nGiven('a {word} with {int} crabs inside', ()=>{})\n...\n")),(0,o.kt)("p",null,"The values extracted can be taken from the argument list"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"...\nGiven('a {word} with {int} crabs inside', (obj: string, count: number)=>{\n    console.log(obj) // prints 'bucket' then 'bowl'\n    console.log(count) // prints 1 then 2\n})\n...\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Currently type transformation is only possible with Cucumber Expressions, and is not available for Regex")),(0,o.kt)("h1",{id:"tables"},"Tables"),(0,o.kt)("p",null,"The last or second to last variable passed to a step will\nbe its table, if one is defined:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"Given a list of books and authors\n| book                            | author      |\n| The Good, The BDD, and The Ugly | Joe Millard |\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Step Definition"',title:'"Step','Definition"':!0},"Given('a list of books and authors', (table: GherkinTable)=>{\n    const [firstItem] = table.rows;\n    const [book, author] = firstItem;\n    expect(book).toBe('The Good, The BDD, and The Ugly')\n    expect(author).toBe('Joe Millard)\n})\n")))}d.isMDXComponent=!0}}]);