"use strict";(self.webpackChunkautometa=self.webpackChunkautometa||[]).push([[166],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,b=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return r?n.createElement(b,l(l({ref:t},p),{},{components:r})):n.createElement(b,l({ref:t},p))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4666:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var n=r(5882),a=r(950),i=(r(9496),r(9613)),l=["components"],o={},s="DTO & Builder Pattern",u={unversionedId:"utility-libraries/dto-builder",id:"utility-libraries/dto-builder",title:"DTO & Builder Pattern",description:"This is a simple library for defining DTO (data transfer object) classes with decorators, and automatically generating builder classes",source:"@site/docs/3_utility-libraries/1_dto-builder.md",sourceDirName:"3_utility-libraries",slug:"/utility-libraries/dto-builder",permalink:"/autometa/docs/utility-libraries/dto-builder",editUrl:"https://github.com/Bendat/autometa/docs/3_utility-libraries/1_dto-builder.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Writing Tests",permalink:"/autometa/docs/ui-testing/user-behaviors/tests"},next:{title:"Group Logger",permalink:"/autometa/docs/utility-libraries/group-logger"}},p=[{value:"Installing",id:"installing",children:[],level:2},{value:"DTOs",id:"dtos",children:[],level:2},{value:"Builders",id:"builders",children:[],level:2}],d={toc:p};function c(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dto--builder-pattern"},"DTO & Builder Pattern"),(0,i.kt)("p",null,"This is a simple library for defining DTO (data transfer object) classes with decorators, and automatically generating builder classes\nto simplify defining a DTO's data."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@autometa/dto"},"NPM")),(0,i.kt)("h2",{id:"installing"},"Installing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm i -s @autometa/dto-builder\n")),(0,i.kt)("h2",{id:"dtos"},"DTOs"),(0,i.kt)("p",null,"A DTO is a class with the ",(0,i.kt)("inlineCode",{parentName:"p"},"@Property")," decorator applied to at least one property."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { property } from '@autometa/dto-builder';\n\nexport class CreateUserDto {\n  @property\n  username!: string;\n\n  @property\n  password!: string;\n\n  @property\n  email?: string;\n}\n")),(0,i.kt)("h2",{id:"builders"},"Builders"),(0,i.kt)("p",null,"Now it's possible to generate a builder for this DTO. By passing a\nDTO Class to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Builder")," function, a new class will be created with\nbuilder functions corresponding to the DTO properties."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { CreateUserDto } from './somewhere';\nimport { Builder } from '@autometa/dto-builder';\n\nconst CreateUserBuilder = Builder(CreateUserDTO);\n\nconst builder = new CreateUserBuilder();\n")),(0,i.kt)("p",null,"The builder will share property names with the underlying DTO, which\nwill be methods that take a value to fill in the DTO, and which return the builder instance to allow for chaining."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"builder.username('fredici').password('1234');\n")),(0,i.kt)("p",null,"Type information is generated preventing the wrong type being used for a\nparam unless explicitly bypassed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"builder.username(1); // tsc error\nbuilder.username(1 as unknown as string); // ok\n")),(0,i.kt)("p",null,"To retrieve the underlying DTO, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const result = builder.build();\n")),(0,i.kt)("p",null,"If the package ",(0,i.kt)("inlineCode",{parentName:"p"},"class-validators")," is being used, then their validation\nwill be executed by the build method. To disable validation, pass ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const result = builder.build(false);\n")))}c.isMDXComponent=!0}}]);