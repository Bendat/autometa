"use strict";(self.webpackChunk_autometa_documentation=self.webpackChunk_autometa_documentation||[]).push([[7085],{7522:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(9901);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(a),d=r,g=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return a?n.createElement(g,l(l({ref:t},c),{},{components:a})):n.createElement(g,l({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3584:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(9901),r=a(4517);const o={tabItem:"tabItem_Lqvu"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:a},t)}},5893:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(4321),r=a(9901),o=a(4517),l=a(6207),s=a(6172),i=a(1968),u=a(4328),c=a(4531);function p(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=m(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[i,u]=g({queryString:a,groupId:n}),[p,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),f=(()=>{const e=i??p;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),b(e)}),[u,b,o]),tabValues:o}}var f=a(4265);const h={tabList:"tabList_BYMX",tabItem:"tabItem_gIVz"};function y(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),m=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==s&&(p(t),i(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},l,{className:(0,o.Z)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":s===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=b(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},r.createElement(y,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return r.createElement(k,(0,n.Z)({key:String(t)},e))}},9079:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var n=a(4321),r=(a(9901),a(7522)),o=a(5893),l=a(3584);const s={},i="Getting Started",u={unversionedId:"playwright/page-components/intro",id:"playwright/page-components/intro",title:"Getting Started",description:"Installation",source:"@site/docs/playwright/page-components/intro.mdx",sourceDirName:"playwright/page-components",slug:"/playwright/page-components/intro",permalink:"/autometa/docs/playwright/page-components/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/playwright/page-components/intro.mdx",tags:[],version:"current",frontMatter:{}},c={},p=[{value:"Installation",id:"installation",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"Page Object Model",id:"page-object-model",level:2}],m={toc:p},d="wrapper";function g(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm i -D @autometa/page-components-playwright\n"))),(0,r.kt)(l.Z,{value:"yarn",label:"YARN",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add -D @autometa/page-components-playwright\n"))),(0,r.kt)(l.Z,{value:"pnpm",label:"PNPM",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm i -D @autometa/page-components-playwright\n")))),(0,r.kt)("h2",{id:"quickstart"},"Quickstart"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"pagecomponents",label:"Page Components",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='Define a Root Page Component'",title:"'Define",a:!0,Root:!0,Page:!0,"Component'":!0},'export class Homepage extends PageComponent {\n  @ByTestId("login-button")\n  loginButton: PageComponent;\n  @ByLocator("login-form")\n  loginForm: LoginForm;\n  @ByPlaceholder(\'Search For Widgets Now!\')\n  searchBar: PageComponent\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='Define Child Components'",title:"'Define",Child:!0,"Components'":!0},"export class LoginForm extends PageComponent {}\n")))),(0,r.kt)("h1",{id:"page-components"},"Page Components"),(0,r.kt)("p",null,"Page Components are an alternative interpretation of the popular 'Page Object Model' pattern for UI Automation. They aim to provide\na declarative model of defining the 'shape' of a Website or app in a\ncomposable and reusable fashion."),(0,r.kt)("p",null,"There are two flavors of the Page Component Model for Playwright:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Page Components"),(0,r.kt)("li",{parentName:"ul"},"Semantic Components")),(0,r.kt)("p",null,"Page Components match the Playwright ",(0,r.kt)("inlineCode",{parentName:"p"},"Locator")," interface. Semantic Components also resemble the ",(0,r.kt)("inlineCode",{parentName:"p"},"Locator")," interface, however by default,\nwith some exceptions, all Playwright actions, like ",(0,r.kt)("inlineCode",{parentName:"p"},"click"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"press"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"evaluate"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"fill")," are hidden and treated as ",(0,r.kt)("inlineCode",{parentName:"p"},"protected")," methods\nof the ",(0,r.kt)("inlineCode",{parentName:"p"},"SemanticComponent")," class and must be explicitely exposed publically by subclasses, discussed later. Both flavors can be mixed to achieve desired results."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This package depends on expiremental decorators and experimental metadata.\nTypescript 5 decorators are not currently supported."),(0,r.kt)("p",{parentName:"admonition"},"As Playwright does not support experimental decorators, tests must be\nbuilt before execution. See ",(0,r.kt)("a",{parentName:"p",href:"https://playwright.dev/docs/test-typescript#manually-compile-tests-with-typescript"},"Building Playwright Tests"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='Example Page Object'",title:"'Example",Page:!0,"Object'":!0},"")),(0,r.kt)("h2",{id:"page-object-model"},"Page Object Model"),(0,r.kt)("p",null,"In the Page Object Model, the ",(0,r.kt)("em",{parentName:"p"},"Page Object")," stores locator references\nto HTML Elements (or other Web Elements) to any descendant relevant dom element."),(0,r.kt)("p",null,"For the TodoMvc app, we might define our Page Object Model as so\n",(0,r.kt)("em",{parentName:"p"},"Target"),": ",(0,r.kt)("a",{parentName:"p",href:"https://demo.playwright.dev/todomvc"},"TodoMVC")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='Example Page Object Model'",title:"'Example",Page:!0,Object:!0,"Model'":!0},'export class TodoPage {\n  todoTitles: Locator;\n  newTodoBar: Locator;\n  markComplete: Locator;\n  todoCount: Locator;\n  items: Locator;\n  constructor(page: Page) {\n    this.todoTitles = page.getByTestId("todo-title");\n    this.newTodoBar = page.getByPlaceholder("What needs to be done");\n    this.markComplete = page.getByLabel("What needs to be done?");\n    this.todoCount = page.getByTestId("todo-count");\n    this.items = page.getByTestId("todo-item");\n  }\n}\n')))}g.isMDXComponent=!0}}]);