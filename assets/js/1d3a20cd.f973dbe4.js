"use strict";(self.webpackChunkautometa=self.webpackChunkautometa||[]).push([[878],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1720:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(5882),r=n(950),o=(n(9496),n(9613)),s=["components"],i={},p="Introduction",l={unversionedId:"ui-testing/user-behaviors/intro",id:"ui-testing/user-behaviors/intro",title:"Introduction",description:"User Behaviors is the complementary pattern for Page Components based on The Screenplay Pattern.",source:"@site/docs/2_ui-testing/2_user-behaviors/1_intro.md",sourceDirName:"2_ui-testing/2_user-behaviors",slug:"/ui-testing/user-behaviors/intro",permalink:"/autometa/docs/ui-testing/user-behaviors/intro",editUrl:"https://github.com/Bendat/autometa/docs/2_ui-testing/2_user-behaviors/1_intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Complex Types",permalink:"/autometa/docs/ui-testing/page-component-model/practical-examples/complex-types"},next:{title:"Observations",permalink:"/autometa/docs/ui-testing/user-behaviors/observations"}},c=[{value:"Quick Glance",id:"quick-glance",children:[],level:2},{value:"Why not just Page Components?",id:"why-not-just-page-components",children:[],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"User Behaviors")," is the complementary pattern for Page Components based on ",(0,o.kt)("a",{parentName:"p",href:"https://serenity-js.org/handbook/design/screenplay-pattern.html"},"The Screenplay Pattern"),"."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"this library depends on Page Components, and it should be\nincluded in your project dependencies."),(0,o.kt)("p",{parentName:"div"},"Page Components define the shape of your product, behaviors\nabstract that shape into actions and observations a user\ncan or will take."))),(0,o.kt)("p",null,"The User Behavior Pattern pulls back on the theatrical metaphor of screenplay to focus on a more end-user oriented semantics, and provide a declarative manner of expressing tests in code."),(0,o.kt)("p",null,"User Behaviors are composed of 2 primary patterns: ",(0,o.kt)("strong",{parentName:"p"},"Observation")," and ",(0,o.kt)("strong",{parentName:"p"},"Action"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Observations")," are a behavior where the user ",(0,o.kt)("em",{parentName:"p"},"observes")," the state of the world they inhabit. Observations can be composed into an action, or used to verify values on the page."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Action"),"s are a behavior where the user ",(0,o.kt)("em",{parentName:"p"},"acts")," on the world, such as clicking a button or typing their name."),(0,o.kt)("p",null,"Behaviors are executed by ",(0,o.kt)("strong",{parentName:"p"},"Participants")," in a ",(0,o.kt)("strong",{parentName:"p"},"Focus Group"),"."),(0,o.kt)("p",null,"A ",(0,o.kt)("strong",{parentName:"p"},"Participant")," is virtual person, a user of your product and an actor in your tests. Participants are provided an itinerary of ",(0,o.kt)("em",{parentName:"p"},"observations")," and ",(0,o.kt)("em",{parentName:"p"},"actions")," to perform in a test to prove some business case."),(0,o.kt)("p",null,"A ",(0,o.kt)("strong",{parentName:"p"},"Focus Group")," is a group of ",(0,o.kt)("strong",{parentName:"p"},"Participants"),' who are configured\nto test your system in different ways. For example a "Customer" participant may visit your main product page and purchase items,\nwhile a "Seller" may access a portal version of your website\nwhere they can manage their purchased items and inventory.'),(0,o.kt)("h2",{id:"quick-glance"},"Quick Glance"),(0,o.kt)("p",null,"Taking the following Page Component Model:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export class HomePage extends WebPage {\n  @component(By.id('login-block'))\n  loginModal: LoginModal;\n}\n\nexport class LoginModal extends Component {\n  @component(By.id('user-name'))\n  userNameField: TextInput;\n\n  @component(By.id('password'))\n  passwordField: TextInput;\n\n  @component(By.id('login-btn'))\n  loginButton: Button;\n}\n")),(0,o.kt)("p",null,"Create an observer to find the login modal, and an action to log the user in."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const LoginComponent = Observe(HomePage, ({ loginModal }) => loginModal);\n\nexport const LogInAs = ({ username, password }: Credentials) =>\n  ActionOn(\n    LoginComponent,\n    async ({ usernameField, passwordField, loginButton }) => {\n      await usernameField.write(username);\n      await passwordField.write(password);\n      await loginButton.click();\n    }\n  );\n\n// Example Credentials Store somewhere in your project\nexport const credentials = {\n  Johnny: { username: 'johnnym2', password: '*******' },\n};\n")),(0,o.kt)("p",null,"Create a group of users"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"@Browser(new Builder().forBrowser(Browser.CHROME))\nexport class Users {\n  @Role('Customer') // Use roles that are relevant to your product\n  @Browses(process.env.MY_URL)\n  Johnny: User;\n}\n")),(0,o.kt)("p",null,"Start writing your test:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"describe('Johnny Logs In', () => {\n  let Johnny: User;\n  // instantiate a new community for each test, Johnny will load a driver\n  beforeEach(async () => ({ Johnny } = await FocusGroup.begin(Users)));\n  // Exit the driver\n  afterEach(async () => Johnny.finish());\n\n  it('Johnny Should Successfully Log In as a Standard User', async () => {\n    await Johnny.will(LoginAs(credentials.Johnny)).and.see(\n      HomePage,\n      HasTitle('Welcome, Johnny!')\n    );\n  });\n});\n")),(0,o.kt)("h2",{id:"why-not-just-page-components"},"Why not just Page Components?"),(0,o.kt)("p",null,"Page Components, being a form of Page Object Model, are best utilized as declarations of shape. They define the shape of your website or product as it appears to a consumer,\nand they provide the means to interact with individual elements at their element level such\nas clicking or typing."),(0,o.kt)("p",null,"One issue with using Page Components as your full test model is nesting/chaining,\nas components are composed of more and more components, resulting in method chains that are repeated many times across your tests, and which may act as a propagating failure across many tests when the shape of the real page changes."),(0,o.kt)("p",null,"User Behaviors look to break these components back up again based on how the user actually interacts them in reality. They describe the parts of the page the user looks for, then the actions the user will take."),(0,o.kt)("p",null,"User behaviors describe clear intent about what the test should do. They are designed to read easily, minimize conditional logic, and ensure tests are as declarative as possible. Importantly,\nbehaviors are easily composable, giving testers the pieces they need to define a test, without\nworrying about specific page details or implementations."))}d.isMDXComponent=!0}}]);